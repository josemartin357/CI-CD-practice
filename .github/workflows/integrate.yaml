# Defines the name of the workflow
name: Node continuous integration

# Specifies that the workflow should trigger on pull requests targeting the 'main' branch
on:
  pull_request:
    branches: [main]

# Starts the 'test_pull_request' job
jobs:
  Build:
    # Specifies the operating system environment for the job
    runs-on: ubuntu-latest

    # Defines the steps to be executed within the job
    steps:
      # Checks out the repository code into the workflow's workspace
      - uses: actions/checkout@v2

      # Sets up the Node.js environment with version 12
      - uses: actions/setup-node@v1
        with:
          node-version: 12

      # Installs 'jq' command-line tool
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      # Installs project dependencies using 'npm ci'
      - run: npm ci

      # Runs the project's tests using 'npm test'
      - name: Run tests
        run: npm test

      # Builds the project using 'npm run build'
      - name: Build project
        run: npm run build

  send_notification_to_slack:
    name: Send notification to Slack
    runs-on: ubuntu-22.04
    if: ${{ needs.Build.result == 'failure' }}
    needs: [Build]

    steps:
      - name: Get Commit Message
        run: |
          commitSHA=${{ github.event.pull_request.head.sha }}
          commitMessage=$(curl -s "https://api.github.com/repos/${{ github.repository }}/commits/$commitSHA" | jq -r '.commit.message')
          echo "::set-output name=commit_message::$commitMessage"

      - name: Notify Slack
        run: |
          failureText="‚ùå *Failure Alert* \n*Title:* Actions \n*Failed Action Link:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}| #${{ github.run_number }}> \n*Repository:* <${{ github.server_url }}/${{ github.repository }}| ${{ github.repository }}> \n*Event:* ${{ github.event_name }} \n*Commit Message:* ${{ steps.GetCommitMessage.outputs.commit_message }} \n*Run ID:* ${{ github.run_id }} \n*Submitted By:* <${{ github.server_url }}/${{ github.repository }}/commits?author=/${{ github.actor }}| #${{ github.actor }}> \nReview the build logs for more details."

          status="${{ contains(needs.*.result, 'failure') && 'failure' }}"

          if [ "$status" = 'failure' ]; then
            color='danger'
            text=$failureText
          fi

          echo "{attachments: [{text: \"$text\", color: \"$color\"}]}" | curl \
            "${{ secrets.SLACK_WEBHOOK_URL }}" \
            -X "POST" \
            --header "Content-Type: application/json" \
            --data-binary @-
